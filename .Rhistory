setwd("/Users/elliotcohen/Dropbox/data/Electricity/CEA/Rcommands")
library(xlsx)
library(plyr)
library(ggplot2)
library(scales)
library(gdata)
library(chron)
library(reshape2)
###################################################
### Define functions
###################################################
# Multiple plot function
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
require(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
load("SLDCv2.rsav")
load("SLDC.rsav")
SLDC=read.xlsx(file="/Users/elliotcohen/Dropbox/Data/Electricity/SLDC/DTL-PS-2012-13.xls",sheetIndex=1,as.data.frame=TRUE,header=TRUE)
SLDC$Date.Time<-as.POSIXlt(SLDC$Date.Time, tz="IST")
SLDC$Date<-as.Date(SLDC$Date.Time)
# Seperate Date into yr-month-day
ymd<-strsplit(as.character(SLDC$Date),"-")
SLDC$year<-laply(ymd, '[[', 1) #assign the list of years to an array called SLDC$year
SLDC$month<-laply(ymd, '[[', 2)
SLDC$day<-laply(ymd, '[[', 3)
SLDC$year<-as.factor(SLDC$year)
SLDC$month<-as.factor(SLDC$month)
SLDC$day<-as.factor(SLDC$day)
clean.time<-round(SLDC$Date.Time,units="mins")
SLDC$time<-times(format(clean.time, "%H:%M:%S"))
save(SLDC, file="SLDC.rsav")
# Rearrange dataframe
SLDCv2<-subset(SLDC, select = c(Date,year,month,day,time,Delhi.Generation,Schedule.from.Grid,Drawl.from.Grid,Demand.met,OD.UD,Frequency))
SLDC=read.xlsx(file="/Users/elliotcohen/Documents/SLDC big data/DTL-PS-2012-13.xls",sheetIndex=1,as.data.frame=TRUE,header=TRUE)
str(SLDC)
getwd()
SLDC$Date.Time<-as.POSIXlt(SLDC$Date.Time, tz="IST")
SLDC$Date<-as.Date(SLDC$Date.Time)
# Seperate Date into yr-month-day
ymd<-strsplit(as.character(SLDC$Date),"-")
SLDC$year<-laply(ymd, '[[', 1) #assign the list of years to an array called SLDC$year
SLDC$month<-laply(ymd, '[[', 2)
SLDC$day<-laply(ymd, '[[', 3)
SLDC$year<-as.factor(SLDC$year)
SLDC$month<-as.factor(SLDC$month)
SLDC$day<-as.factor(SLDC$day)
clean.time<-round(SLDC$Date.Time,units="mins")
SLDC$time<-times(format(clean.time, "%H:%M:%S"))
save(SLDC, file="SLDC.rsav")
head(SLDC)
str(SLDC)
SLDC$Date.Time<-as.POSIXlt(SLDC$Time, tz="IST")
SLDC$Date<-as.Date(SLDC$Date.Time)
ymd<-strsplit(as.character(SLDC$Date),"-")
SLDC$year<-laply(ymd, '[[', 1) #assign the list of years to an array called SLDC$year
SLDC$month<-laply(ymd, '[[', 2)
SLDC$day<-laply(ymd, '[[', 3)
SLDC$year<-as.factor(SLDC$year)
SLDC$month<-as.factor(SLDC$month)
SLDC$day<-as.factor(SLDC$day)
clean.time<-round(SLDC$Date.Time,units="mins")
SLDC$time<-times(format(clean.time, "%H:%M:%S"))
save(SLDC, file="SLDC.rsav")
SLDCv2<-subset(SLDC, select = c(Date,year,month,day,time,Delhi.Generation,Schedule.from.Grid,Drawl.from.Grid,Demand.met,OD.UD,Frequency))
str(SLDC)
str(SLDCv2)
save(SLDCv2, file="SLDCv2.rsav")
head(SLDC)
str(SLDCv2)
library(plyr)
d.sum<-ddply(SLDCv2, .(Date), summarise, Delhi.Gen=sum(Delhi.Generation), Schedule.from.Grid=sum(Schedule.from.Grid), Drawl.from.Grid=sum(Drawl.from.Grid), Demand.met=sum(Demand.met), OD.UD=sum(OD.UD), avg.Freq=mean(Frequency))
str(d.sum)
dailyMean<-ddply(SLDC,.(Date),summarize,daily=mean(Demand.met))
pMeanZoom<-ggplot(dailyMean,aes(x=Date,y=daily)) + geom_line(colour="blue") + scale_y_continuous(name='Mean Load (MW)') + scale_x_date(breaks=date_breaks("2 months"), labels=date_format("%b-%Y")) + labs(title="Daily mean power supply to Delhi"); pMeanZoom
ggplot(d.sum, aes(x=Date, y=Demand.met)) + geom_line()
head(SLDCv3)
head(SLDCv2)
d.mean<-ddply(SLDCv2, .(Date), summarise, numcolwise(mean))
d.mean<-ddply(SLDCv2, .(Date), numcolwise(mean))
str(d.mean)
ggplot(d.mean, aes(x=Date, y=Demand.met)) + geom_line()
dailyMean<-ddply(SLDC,.(Date), summarize, daily=mean(Demand.met))
ggplot(d.mean, aes(x=Date, y=Demand.met)) + geom_line(colour="blue") + scale_y_continuous(name='Mean Load (MW)') + scale_x_date(breaks=date_breaks("2 months"), labels=date_format("%b-%Y")) + labs(title="Load Profile of Delhi, India ")
str(temps)
str(data)
data<-read.table(file="/Users/elliotcohen/Dropbox/Data/Climate/Daily_Temperature_1995-2013_Delhi.txt", header=FALSE, colClasses=c("factor", "factor","factor","numeric"))
names(data)<-c("Month","Day","Year","Temp")
# Create Date attribute (column)
data$Date<-as.Date(as.character(paste(data$Year, data$Month, data$Day,sep="-")), "%Y-%m-%d")
# grab data for period 2012-04-01 to 2013-03-31
yr<- subset(data, Date > as.Date("2012-03-31"))
yr<-subset(yr,Date<as.Date("2013-04-01"))
head(yr)
yr<- subset(data, Date > as.Date("2012-03-31") & < as.Date("2013-04-01"))
yr<- subset(data, Date > as.Date("2012-03-31") & Date < as.Date("2013-04-01"))
loadp<-ggplot(d.mean, aes(x=Date, y=Demand.met)) + geom_line(colour="blue") + scale_y_continuous(name='Mean Load (MW)') + scale_x_date(breaks=date_breaks("2 months"), labels=date_format("%b-%Y")) + labs(title="Load Profile of Delhi, India ")
loadp
data<-read.table(file="/Users/elliotcohen/Dropbox/Data/Climate/Daily_Temperature_1995-2013_Delhi.txt", header=FALSE, colClasses=c("factor", "factor","factor","numeric"))
names(data)<-c("Month","Day","Year","Temp")
# Create Date attribute (column)
data$Date<-as.Date(as.character(paste(data$Year, data$Month, data$Day,sep="-")), "%Y-%m-%d")
# grab data for period 2012-04-01 to 2013-03-31
yr<- subset(data, Date > as.Date("2012-03-31") & Date < as.Date("2013-04-01"))
p2<-ggplot(yr, aes(x=Date, y=Temp)) + geom_line(colour="red") + scale_y_continuous(name='Temperature (deg.F)', limits=c(round(32,digits=-1),round(1.1*max(yr$Temp),digits=-1)), expand=c(0,0)) + scale_x_date(breaks=date_breaks("2 months"), labels=date_format("%b-%Y")) + labs(title="Daily Mean Temperature of Delhi")
p2
# Daily-average Demand met for Delhi
load.p<-ggplot(d.mean, aes(x=Date, y=Demand.met)) + geom_line(colour="blue") + scale_y_continuous(name='Mean Load (MW)') + scale_x_date(breaks=date_breaks("2 months"), labels=date_format("%b-%Y")) + labs(title="Load Profile of Delhi, India ")
loadp
# Now show daily energy demand side-by-side with daily mean temperature for the same period
# Daily Mean Temperature for Delhi, India 1995-2013.
data<-read.table(file="/Users/elliotcohen/Dropbox/Data/Climate/Daily_Temperature_1995-2013_Delhi.txt", header=FALSE, colClasses=c("factor", "factor","factor","numeric"))
# Create Date attribute (column)
names(data)<-c("Month","Day","Year","Temp")
data$Date<-as.Date(as.character(paste(data$Year, data$Month, data$Day,sep="-")), "%Y-%m-%d")
# subset data to the period 2012-04-01 to 2013-03-31 (same as load data)
yr<- subset(data, Date > as.Date("2012-03-31") & Date < as.Date("2013-04-01"))
# plot
temp.p<-ggplot(yr, aes(x=Date, y=Temp)) + geom_line(colour="red") + scale_y_continuous(name='Temperature (deg.F)', limits=c(round(32,digits=-1),round(1.1*max(yr$Temp),digits=-1)), expand=c(0,0)) + scale_x_date(breaks=date_breaks("2 months"), labels=date_format("%b-%Y")) + labs(title="Daily Mean Temperature of Delhi")
p2Zoom<-ggplot(yr,aes(x=Date, y=Temp)) + geom_line(colour="red") + scale_y_continuous(name='Temperature (deg.F)') + scale_x_date(breaks=date_breaks("1 months"), labels=date_format("%b-%Y")) + labs(title="Daily Mean Temperature of Delhi")
# add temperature plot side-by-side
multiplot(load.p, temp.p, cols=1)
